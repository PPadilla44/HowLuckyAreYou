// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<OddsItem /> should match snapshot 1`] = `
<View
  collapsable={false}
  forwardedRef={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onLayout={[Function]}
  style={
    Object {
      "overflow": "hidden",
    }
  }
>
  <View
    style={
      Object {
        "bottom": 0,
        "flexDirection": "row",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "transform": Array [
          Object {
            "translateX": -10000,
          },
        ],
      }
    }
  >
    <RNGestureHandlerButton
      collapsable={false}
      exclusive={true}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      rippleColor={0}
      style={
        Object {
          "alignItems": "flex-start",
          "backgroundColor": "#325C99",
          "justifyContent": "center",
        }
      }
      testID="leftSwipeBtn"
    >
      <View
        accessible={true}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "white",
              "fontWeight": "600",
              "paddingHorizontal": 30,
              "paddingVertical": 20,
            }
          }
        >
          Share
        </Text>
      </View>
    </RNGestureHandlerButton>
    <View
      onLayout={[Function]}
    />
  </View>
  <View
    style={
      Object {
        "bottom": 0,
        "flexDirection": "row-reverse",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "transform": Array [
          Object {
            "translateX": -10000,
          },
        ],
      }
    }
  >
    <RNGestureHandlerButton
      collapsable={false}
      exclusive={true}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      rippleColor={0}
      style={
        Object {
          "alignItems": "flex-end",
          "backgroundColor": "red",
          "justifyContent": "center",
        }
      }
      testID="rightSwipeBtn"
    >
      <View
        accessible={true}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "white",
              "fontWeight": "bold",
              "paddingHorizontal": 30,
              "paddingVertical": 20,
            }
          }
        >
          Delete
        </Text>
      </View>
    </RNGestureHandlerButton>
    <View
      onLayout={[Function]}
    />
  </View>
  <View
    collapsable={false}
    forwardedRef={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    pointerEvents="auto"
    style={
      Object {
        "transform": Array [
          Object {
            "translateX": -0,
          },
        ],
      }
    }
  >
    <RNGestureHandlerButton
      collapsable={false}
      exclusive={true}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      rippleColor={0}
      style={
        Array [
          Object {
            "backgroundColor": "#252525",
            "borderColor": "white",
          },
          Object {
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 30,
            "paddingVertical": 20,
          },
        ]
      }
      testID="oddsItemBtn"
    >
      <View
        accessible={true}
        style={
          Object {
            "backgroundColor": "#252525",
            "borderColor": "white",
            "opacity": 1,
            "shadowColor": "white",
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "white",
                "fontFamily": "Futura",
              },
              Object {
                "fontSize": 24,
              },
            ]
          }
        >
          test1
        </Text>
        <Text
          style={
            Array [
              Object {
                "color": "white",
                "fontFamily": "Futura",
              },
              Object {
                "fontSize": 24,
              },
            ]
          }
        >
          90%
           
        </Text>
      </View>
    </RNGestureHandlerButton>
  </View>
</View>
`;
